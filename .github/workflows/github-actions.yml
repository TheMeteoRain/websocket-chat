name: CI
run-name: build

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  NX_CLOUD: false

on:
  push:
    branches:
      - develop

jobs:
  install:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/asdf-setup
      - uses: ./.github/actions/pnpm

  build:
    runs-on: ubuntu-latest
    needs: install
    environment: production
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/asdf-setup
      - uses: ./.github/actions/pnpm

      - run: pnpm nx run @rally/generate-package-json:build

      - run: rm ./apps/client/.env.local
      - run: pnpm nx run @rally/client:build --mode=production
        env:
          VITE_NX_API_SCHEME_HTTP: ${{ vars.VITE_NX_API_SCHEME_HTTP }}
          VITE_NX_API_SCHEME_WS: ${{ vars.VITE_NX_API_SCHEME_WS }}
          VITE_NX_API_HOST: ${{ vars.VITE_NX_API_HOST }}
          VITE_NX_API_HOST_SSR: ${{ vars.VITE_NX_API_HOST_SSR }}
          VITE_NX_API_PORT: ${{ vars.VITE_NX_API_PORT }}
          VITE_NX_API_ENDPOINT: ${{ vars.VITE_NX_API_ENDPOINT }}
          VITE_NX_API_URL: ${{ vars.VITE_NX_API_URL }}
          VITE_NX_API_HTTP_URL: ${{ vars.VITE_NX_API_HTTP_URL }}
          VITE_NX_API_WS_URL: ${{ vars.VITE_NX_API_WS_URL }}
      - run: pnpm nx run @rally/client:generate-package-json

      - run: pnpm nx run server:build --mode=production

      - run: pnpm nx run migrate:build --mode=production
      - run: pnpm nx run migrate:generate-package-json

      - uses: actions/cache@v4
        id: cache-build
        with:
          path: |
            ./apps/**/dist
            ./apps/**/build
          key: build-${{ github.sha }}
          restore-keys: |
            build-

  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        id: restore-build
        with:
          path: |
            ./apps/**/dist
            ./apps/**/build
          key: build-${{ github.sha }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push server image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/server
          file: ./apps/server/Dockerfile
          push: true
          tags: ghcr.io/themeteorain/rally/server:latest

      - name: Build and push client image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/client
          file: ./apps/client/Dockerfile
          push: true
          tags: ghcr.io/themeteorain/rally/client:latest

      - name: Build and push migrate image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/migrate
          file: ./apps/migrate/Dockerfile
          push: true
          tags: ghcr.io/themeteorain/rally/migrate:latest
