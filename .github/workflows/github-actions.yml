name: build
run-name: build
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install asdf & tools
        uses: asdf-vm/actions/install@v2
      - run: node -v
      - run: bun install --frozen-lockfile
      - run: bun run test
      - run: bun run build
  # build-with-yarn:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v4
  #     - name: Install asdf & tools
  #       uses: asdf-vm/actions/install@v2
  #     - run: node -v
  #     - run: yarn install --frozen-lockfile
  #     - run: yarn test
  #     - run: yarn build
  # build-with-npm:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v4
  #     - name: Install asdf & tools
  #       uses: asdf-vm/actions/install@v2
  #     - run: node -v
  #     - run: npm install --force --frozen-lockfile
  #     - run: npm run test
  #     - run: npm run build
  build-with-pnpm:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install asdf & tools
        uses: asdf-vm/actions/install@v2

      - name: Get yarn cache directory path
        id: pnpm-cache-dir
        run: echo "dir=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        id: cache-pnpm
        with:
          path: ${{ steps.pnpm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - run: node -v
      - run: pnpm install --frozen-lockfile
      - run: pnpm run test
      - run: pnpm run build
